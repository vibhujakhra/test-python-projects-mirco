"""merging all migrations

Revision ID: 1329bad715ea
Revises: 
Create Date: 2022-12-16 00:45:00.191247

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1329bad715ea'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('consent_state',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('code', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consent_type',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('code', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('class_name', sa.VARCHAR(), nullable=True),
    sa.Column('record_id', sa.VARCHAR(), nullable=True),
    sa.Column('changed_values', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pay_in_slip',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('download_url', sa.VARCHAR(), nullable=True),
    sa.Column('slip_number', sa.VARCHAR(), nullable=True),
    sa.Column('insurer_code', sa.VARCHAR(), nullable=False),
    sa.Column('pay_in_slip_amount', sa.Integer(), nullable=True),
    sa.Column('transaction_type_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_mode',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('code', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_state',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('code', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_status',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('code', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vb64',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vb64_type_id', sa.Integer(), nullable=True),
    sa.Column('upload_date', sa.Date(), nullable=True),
    sa.Column('uploaded_by', sa.VARCHAR(), nullable=True),
    sa.Column('file_location', sa.VARCHAR(), nullable=True),
    sa.Column('success_records', sa.Integer(), nullable=True),
    sa.Column('failed_records', sa.Integer(), nullable=True),
    sa.Column('total_records', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cheque_details',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_type_id', sa.Integer(), nullable=True),
    sa.Column('cheque_number', sa.VARCHAR(), nullable=False),
    sa.Column('cheque_date', sa.Date(), nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=False),
    sa.Column('bank_branch_and_city', sa.VARCHAR(), nullable=True),
    sa.Column('account_number', sa.VARCHAR(), nullable=False),
    sa.Column('cheque_type', sa.Enum('DEALER_CHEQUE', 'CUSTOMER_CHEQUE', name='cheque_type_enum'), nullable=True),
    sa.Column('pay_in_slip_id', sa.BigInteger(), nullable=True),
    sa.Column('unique_reference_number', sa.VARCHAR(), nullable=True),
    sa.Column('cheque_amount', sa.Integer(), nullable=True),
    sa.Column('insurer_code', sa.VARCHAR(), nullable=True),
    sa.Column('payment_status', sa.Integer(), nullable=True),
    sa.Column('clearance_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['pay_in_slip_id'], ['pay_in_slip.id'], ),
    sa.ForeignKeyConstraint(['payment_status'], ['payment_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consent',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('consent_type', sa.Integer(), nullable=True),
    sa.Column('consent_state', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['consent_state'], ['consent_state.id'], ),
    sa.ForeignKeyConstraint(['consent_type'], ['consent_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vb64record',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vb64_id', sa.BigInteger(), nullable=True),
    sa.Column('policy_number', sa.VARCHAR(), nullable=True),
    sa.Column('bank_name', sa.VARCHAR(), nullable=True),
    sa.Column('cheque_number', sa.VARCHAR(), nullable=True),
    sa.Column('upload_status', sa.VARCHAR(), nullable=True),
    sa.Column('remarks', sa.VARCHAR(), nullable=True),
    sa.Column('clearance_date', sa.Date(), nullable=True),
    sa.Column('clearance_status', sa.VARCHAR(), nullable=True),
    sa.Column('file_name', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['vb64_id'], ['vb64.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('billing',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('insurer_code', sa.VARCHAR(), nullable=False),
    sa.Column('cheque_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cheque_id'], ['cheque_details.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mandate_form',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('consent_id', sa.BigInteger(), nullable=True),
    sa.Column('document_url', sa.VARCHAR(), nullable=False),
    sa.ForeignKeyConstraint(['consent_id'], ['consent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verification_link',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('consent_id', sa.Integer(), nullable=True),
    sa.Column('link_ttl_seconds', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['consent_id'], ['consent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_type_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(), nullable=False),
    sa.Column('insurer_code', sa.VARCHAR(), nullable=False),
    sa.Column('dealer_person', sa.VARCHAR(), nullable=True),
    sa.Column('dealer_code', sa.VARCHAR(), nullable=True),
    sa.Column('sales_manager', sa.VARCHAR(), nullable=True),
    sa.Column('payment_amount', sa.Integer(), nullable=True),
    sa.Column('payment_state', sa.Integer(), nullable=True),
    sa.Column('consent_id', sa.Integer(), nullable=True),
    sa.Column('payment_mode', sa.Integer(), nullable=True),
    sa.Column('cheque_id', sa.Integer(), nullable=True),
    sa.Column('billing_id', sa.BigInteger(), nullable=True),
    sa.Column('policy_number', sa.VARCHAR(), nullable=True),
    sa.Column('model', sa.VARCHAR(), nullable=True),
    sa.Column('variant', sa.VARCHAR(), nullable=True),
    sa.Column('insurer_name', sa.VARCHAR(), nullable=True),
    sa.Column('insured_name', sa.VARCHAR(), nullable=True),
    sa.Column('policy_start_date', sa.Date(), nullable=True),
    sa.Column('policy_issuance_date', sa.Date(), nullable=True),
    sa.Column('endorsement_number', sa.VARCHAR(), nullable=True),
    sa.Column('policy_end_date', sa.Date(), nullable=True),
    sa.Column('vehicle_cover_id', sa.Integer(), nullable=True),
    sa.Column('policy_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['billing_id'], ['billing.id'], ),
    sa.ForeignKeyConstraint(['cheque_id'], ['cheque_details.id'], ),
    sa.ForeignKeyConstraint(['consent_id'], ['consent.id'], ),
    sa.ForeignKeyConstraint(['payment_mode'], ['payment_mode.id'], ),
    sa.ForeignKeyConstraint(['payment_state'], ['payment_state.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('insurer_call_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('raw_request', sa.VARCHAR(), nullable=True),
    sa.Column('raw_response', sa.VARCHAR(), nullable=True),
    sa.Column('parsed_response', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('insurer_call_log')
    op.drop_table('payment')
    op.drop_table('verification_link')
    op.drop_table('mandate_form')
    op.drop_table('billing')
    op.drop_table('vb64record')
    op.drop_table('consent')
    op.drop_table('cheque_details')
    op.drop_table('vb64')
    op.drop_table('payment_status')
    op.drop_table('payment_state')
    op.drop_table('payment_mode')
    op.drop_table('pay_in_slip')
    op.drop_table('history')
    op.drop_table('consent_type')
    op.drop_table('consent_state')
    # ### end Alembic commands ###
