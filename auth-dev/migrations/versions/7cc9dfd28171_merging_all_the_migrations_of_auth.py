"""merging all the migrations of auth

Revision ID: 7cc9dfd28171
Revises: 
Create Date: 2023-01-19 11:53:09.288083

"""
from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy.generics


# revision identifiers, used by Alembic.
revision = '7cc9dfd28171'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('modules',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('code', sa.VARCHAR(), nullable=False),
    sa.Column('group_name', sa.VARCHAR(), nullable=True),
    sa.Column('group_url', sa.VARCHAR(), nullable=True),
    sa.Column('module_url', sa.VARCHAR(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('misp_user_sub_type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_parent_id'), 'role', ['parent_id'], unique=False)
    op.create_table('permission',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permission_role_id'), 'permission', ['role_id'], unique=False)
    op.create_table('user',
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('salutation', sa.VARCHAR(), nullable=True),
    sa.Column('first_name', sa.VARCHAR(), nullable=False),
    sa.Column('middle_name', sa.VARCHAR(), nullable=True),
    sa.Column('last_name', sa.VARCHAR(), nullable=True),
    sa.Column('mobile_no', sa.VARCHAR(), nullable=False),
    sa.Column('landline_no', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('address', sa.VARCHAR(), nullable=True),
    sa.Column('city', sa.VARCHAR(), nullable=True),
    sa.Column('state', sa.VARCHAR(), nullable=True),
    sa.Column('pincode', sa.VARCHAR(), nullable=True),
    sa.Column('designation', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_role_id'), 'user', ['role_id'], unique=False)
    op.create_table('insurer_details',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.Column('code', sa.VARCHAR(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_insurer_details_user_id'), 'insurer_details', ['user_id'], unique=False)
    op.create_table('user_meta_data',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=True),
    sa.Column('ams_code', sa.VARCHAR(), nullable=True),
    sa.Column('oem_code', sa.VARCHAR(), nullable=True),
    sa.Column('broker_code', sa.VARCHAR(), nullable=True),
    sa.Column('dealer_code', sa.VARCHAR(), nullable=True),
    sa.Column('workshop_code', sa.VARCHAR(), nullable=True),
    sa.Column('insurer_code', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_meta_data_user_id'), 'user_meta_data', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_meta_data_user_id'), table_name='user_meta_data')
    op.drop_table('user_meta_data')
    op.drop_index(op.f('ix_insurer_details_user_id'), table_name='insurer_details')
    op.drop_table('insurer_details')
    op.drop_index(op.f('ix_user_role_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_permission_role_id'), table_name='permission')
    op.drop_table('permission')
    op.drop_index(op.f('ix_role_parent_id'), table_name='role')
    op.drop_table('role')
    op.drop_table('modules')
    # ### end Alembic commands ###
